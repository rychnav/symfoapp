{%- macro fab_actions_button(params) -%}
    {% from 'parts/icons/_svg.html.twig' import svg_icon %}

    <div class="fixed-action-btn">
        <a class="btn-floating btn-large">
            {{- svg_icon({'id': 'more-vertical', 'class': 'sym-icon__small__light'}) -}}
        </a>

        <ul>
            {# Page dependent fabs #}
            {%- if params.block is defined and params.path is defined -%}
                {{- block(params.block, params.path) -}}
            {%- endif -%}

            {# Global fabs #}
            {{- block('translate_fab') -}}
        </ul>
    </div>
{%- endmacro fab_actions_button -%}

{%- macro fab_action_item(params) -%}
    {% from 'parts/icons/_svg.html.twig' import svg_icon %}

    <li>
        {% set url = params.route is defined ? path(params.route) : params.url %}

        {% set tooltip_text = params.tooltip_text|trans(
            params.trans_params|default({}),
            params.trans_domain|default('messages'),
            params.locale|default(app.request.locale)
        ) %}

        <a href="{{ url }}" class="{% if params.isModalTrigger %}modal-trigger{% endif %} btn-floating {{ params.btn_color }} darken-2 tooltipped"
            {% if params.data_role is defined %} data-role="{{ params.data_role }}"{% endif %}
            {% if params.isModalTrigger %} data-target="materialize-modal" {% endif %}
            data-position="left" data-tooltip="{{ tooltip_text }}">
            {{- svg_icon({'id': params.icon_id, 'class': 'sym-icon__small__light'}) -}}
        </a>
    </li>
{%- endmacro fab_action_item -%}

{%- block translate_fab -%}
    {%- if app.request.locale not in app.request.preferredLanguage -%}
        {{- _self.fab_action_item({
            'url': preferred_locale_url(),
            'locale': app.request.preferredLanguage,
            'isModalTrigger': false,
            'btn_color': 'blue',
            'tooltip_text': "Translate on my language",
            'icon_id': 'translate'
        }) -}}
    {%- endif -%}
{%- endblock translate_fab -%}

{%- macro create_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'route': params.route,
            'isModalTrigger': true,
            'btn_color': 'green',
            'tooltip_text': params.tooltip_text,
            'icon_id': 'add'
        }) -}}
    {% endif %}
{%- endmacro create_fab -%}

{%- macro back_to_list_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'route': params.route,
            'isModalTrigger': false,
            'btn_color': 'teal',
            'tooltip_text': params.tooltip_text,
            'icon_id': 'list'
        }) -}}
    {% endif %}
{%- endmacro back_to_list_fab -%}

{%- macro enable_editing_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'url': '#',
            'isModalTrigger': false,
            'btn_color': 'pink',
            'tooltip_text': 'Enable editing',
            'icon_id': 'update',
            'data_role': 'enable-editing'
        }) -}}
    {% endif %}
{%- endmacro enable_editing_fab -%}

{%- macro disable_editing_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'url': '#',
            'isModalTrigger': false,
            'btn_color': 'violet hide',
            'tooltip_text': 'Disable editing',
            'icon_id': 'update-disabled',
            'data_role': 'disable-editing'
        }) -}}
    {% endif %}
{%- endmacro disable_editing_fab -%}

{%- macro select_many_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'url': '#',
            'isModalTrigger': false,
            'btn_color': 'orange',
            'tooltip_text': 'Select many',
            'icon_id': 'checkbox',
            'data_role': 'show-chooseboxes'
        }) -}}
    {% endif %}
{%- endmacro select_many_fab -%}

{%- macro unselect_many_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'url': '#',
            'isModalTrigger': false,
            'btn_color': 'orange hide',
            'tooltip_text': 'Cancel selection',
            'icon_id': 'hide_checkboxes',
            'data_role': 'hide-chooseboxes'
        }) -}}
    {% endif %}
{%- endmacro unselect_many_fab -%}

{%- macro delete_many_fab(params) -%}
    {% if app.request.attributes.get('_route') in params.allowed_routes %}
        {{- _self.fab_action_item({
            'url': '#',
            'isModalTrigger': false,
            'btn_color': 'red hide',
            'tooltip_text': 'Delete many',
            'icon_id': 'delete_forever',
            'data_role': 'remove-entities'
        }) -}}
    {% endif %}
{%- endmacro delete_many_fab -%}
